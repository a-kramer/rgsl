% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_gsl_odeiv2.R
\name{r_gsl_odeiv2_outer_state_only}
\alias{r_gsl_odeiv2_outer_state_only}
\title{Initial Value Problem solution in C, no functions}
\usage{
r_gsl_odeiv2_outer_state_only(
  name,
  experiments,
  p,
  abs.tol = 1e-06,
  rel.tol = 1e-05,
  initial.step.size = 0.001,
  method = 0
)
}
\arguments{
\item{name}{the name of the ODE model to simulate (a shared library of the same name will be dynamically loaded and needs to be created first)}

\item{experiments}{a list of N simulation experiments (time, parameters, initial value, events)}

\item{p}{a matrix of parameters with M columns}

\item{abs.tol}{absolute tolerance (one real number, defaults to 1e-6)}

\item{rel.tol}{relative tolerance (one real number, defaults to 1e-5)}

\item{initial.step.size}{initial value for the step size; the step size will adapt to a value that observes the tolerances; defaults to 1e-3}
}
\value{
a list with solution trajectories y(t;p) for all experiments
}
\description{
This is a wrapper. It uses the .Call function to call the C
implementation. The C program solves a set of ODE intial value
problems and returns the trajectory y(t;p) for every real valued
parameter vector p. We use the solvers from the GNU Scientific
Library module odeiv2. This is similar to \code{r_gsl_odeiv2_outer} but
does not return (or evaluate) the system's output function
(MODEL_func()).
}
\details{
Details: the c-code can be found in the \code{src/r_gsl_odeiv2.c}, the C
function is called \code{r_gsl_odeiv2_outer_state_only()}.
}
\keyword{ODE}
