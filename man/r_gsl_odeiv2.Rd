% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_gsl_odeiv2.R
\name{r_gsl_odeiv2}
\alias{r_gsl_odeiv2}
\title{Initial Value Problem solution in C}
\usage{
r_gsl_odeiv2(
  name,
  t,
  y0,
  p,
  events = NULL,
  abs.tol = 1e-06,
  rel.tol = 1e-05,
  initial.step.size = 0.001
)
}
\arguments{
\item{t}{a vector of time values for the desired output}

\item{y0}{initial value of the state vector, at time t\link{1}}

\item{p}{a matrix, each column is a valid parameter set for the model}

\item{abs.tol}{absolute tolerance (one real number, defaults to 1e-6)}

\item{rel.tol}{relative tolerance (one real number, defaults to 1e-5)}

\item{initial.step.size}{initial value for the step size; the step size will adapt to a value that observes the tolerances; defaults to 1e-3}

\item{model_name}{the name of the ODE model to simulate (a shared library of the same name will be dynamically loaded and needs to be created first)}
}
\value{
the solution trajectories y(t;p) for all p\link{,k} (3-dim-array)
}
\description{
This is a wrapper. It uses the .Call function to call the C
function r_gsl_odeiv2(). The C program solves a set of ODE intial
value problems and returns the trajectory y(t;p) for every real
valued parameter vector p. We use the solvers from the GNU
Scientific Library module odeiv2.
}
\details{
The model will be simulated N times, where N is the number of
columns in p. The output is a 3 dimensional array y, with y\link{i,j,k}
corresponding to state variable i, time t\link{j}, and parameter set
p\link{,k}.
}
\examples{
y0 <- c(0,1)
t <- seq(0,1,length.out=100)
p <- c(1,0,0)
y <- r_gsl_odeiv2("HarmonicOscillator",t,y0,p)
}
\keyword{ODE}
