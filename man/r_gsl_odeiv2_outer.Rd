% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_gsl_odeiv2.R
\name{r_gsl_odeiv2_outer}
\alias{r_gsl_odeiv2_outer}
\title{Initial Value Problem solution in C}
\usage{
r_gsl_odeiv2_outer(
  name,
  experiments,
  p,
  abs.tol = 1e-06,
  rel.tol = 1e-05,
  initial.step.size = 0.001,
  method = 0
)
}
\arguments{
\item{name}{the name of the ODE model to simulate (a shared library of the same name will be dynamically loaded and needs to be created first)}

\item{experiments}{a list of \code{N} simulation experiments (time, parameters, initial value, events)}

\item{p}{a matrix of parameters with M columns}

\item{abs.tol}{absolute tolerance, real scalar}

\item{rel.tol}{relative tolerance, real scalar}

\item{initial.step.size}{initial value for the step size; the step size will adapt to a value that observes the tolerances, real scalar}
}
\value{
a list of the solution trajectories \verb{y(t;p)} for all experiments (named like the experiments), as well as the output functions
}
\description{
This is a wrapper. It uses the .Call function to call the C
function \code{r_gsl_odeiv2_outer()}. The C program solves a set of ODE intial
value problems and returns the trajectory \verb{y(t;p)} for every real
valued parameter vector \code{p}. We use the solvers from the GNU
Scientific Library module odeiv2.
}
\details{
The model will be simulated NÃ—M times, where N is the number of
simulation experiments and M the number of columns in the p
matrix. The output is an N-sized list of 3 dimensional arrays y,
with y\link{i,j,k} corresponding to state variable i, time t\link{j}, and
parameter set p\link{,k}.

The model must have output functions (observable quantities of a
system), the C-source can include a function with a name ending in
"_func" (e.g. mymodel.so with

\if{html}{\out{<div class="sourceCode">}}\preformatted{int mymodel_func(double t, double y[], double fout[], void *p)
}\if{html}{\out{</div>}}

where fout will contain the output-function values after the call).
}
\keyword{ODE}
