% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_gsl_odeiv2.R
\name{r_gsl_odeiv2_outer}
\alias{r_gsl_odeiv2_outer}
\title{Initial Value Problem solution in C}
\usage{
r_gsl_odeiv2_outer(name, experiments, p)
}
\arguments{
\item{experiments}{a list of N simulation experiments (time, parameters, initial value, events)}

\item{p}{a matrix of parameters with M columns}

\item{model_name}{the name of the ODE model to simulate (a shared library of the same name will be dynamically loaded and needs to be created first)}
}
\value{
the solution trajectories y(t;p) for all experiments
}
\description{
This is a wrapper. It uses the .Call function to call the C
function r_gsl_odeiv2_outer(). The C program solves a set of ODE intial
value problems and returns the trajectory y(t;p) for every real
valued parameter vector p. We use the solvers from the GNU
Scientific Library module odeiv2.
}
\details{
The model will be simulated NÃ—M times, where N is the number of
simulation experiments and M the number of columns in the p
matrix. The output is an N-sized list of 3 dimensional arrays y,
with y\link{i,j,k} corresponding to state variable i, time t\link{j}, and
parameter set p\link{,k}.
}
\examples{
y0 <- c(0,1)
t <- seq(0,1,length.out=100)
u <- c(0,0)
e <- list(time=t,input=u,initial_value=y0)
y <- r_gsl_odeiv2_outer("HarmonicOscillator",t,y0,p=matrix(seq(0,1,length.out=3),ncol=3))
}
\keyword{ODE}
